[BITS 16]
ORG 0x7c00
mov ah,0
mov al,14h
global err
global loop1
extern extern_cmp
mov ah,2
mov al,1
mov ch,0
mov cl,2
mov dh,0
mov dl,0
mov bx,0x1000
loop1:
int 0x13
cmp ah,0
jz check
mov ah,2
mov al,1
mov ch,0
mov cl,2
mov dh,0
inc dl
jmp loop1
check:
jmp check1
check1:
cmp byte [0x1000],0x0f
jz check2
jmp loop1
check2:cmp byte [0x1001],0x1f
jz check3
jmp loop1
check3:cmp byte[0x1002],0xaa
jz  ldr
jmp loop1
ldr:mov ah,0x0e
mov al,'.'
int 0x10
mov [0x9000],dl
jmp 0x1003
err:
mov ah,0x0e
mov al,'E'
int 0x10
mov al,'R'
int 0x10
mov al,'R'
int 0x10
mov al,'O'
int 0x10
mov al,'R'
int 0x10
hng:jmp hng
nxt:mov ah,2
mov al,1
mov ch,0
mov cl,2
mov dh,0
cmp dl,0
jz fdb
cmp dl,1
jz hda
cmp dl,0x80
jz hdb
mov dl,0x80
jmp loop1
fdb:mov dl,1
jmp loop1
hda:mov dl,0x80
jmp loop1
hdb:mov dl,0x81
jmp loop1
times 510 - ($ - $$) db 0
dw 0xaa55
[bits 16]
[org 0x1000]
db 0x0f,0x1f,0xaa
jmp end
mov ah,0x0e
mov al,'.'
int 0x10
dap:db 0x10
db 0
db 2
dw 16
dw 0x8000
dw 0
dd 4
dd 0
end:mov ah,0x0e
mov al,'.'
int 0x10
mov ah,0x02
mov ch,0
mov al,1
mov cl,3
mov dh,0
mov bx,0x7df7
mov dl,[0x9000]
int 0x13
cmp ah,0
jz _ldr
jmp _err
_ldr:mov ah,0x0e
mov al,'.'
int 0x10
jmp _check
jmp 0x8000
mov ah,0x0e
mov al,'G'
int 0x10
mov al,'O'
int 0x10
mov al,'I'
int 0x10
mov al,'N'
int 0x10
mov al,'G'
int 0x10
mov al,' '
int 0x10
mov al,'P'
int 0x10
mov al,'R'
int 0x10
mov al,'O'
int 0x10
mov al,'T'
int 0x10
mov al,'E'
int 0x10
mov al,'C'
int 0x10
mov al,'T'
int 0x10
mov al,'E'
int 0x10
mov al,'D'
int 0x10
_err:
mov ah,0x0e
mov al,'E'
int 0x10
_hng:jmp _hng
_check:cmp byte[0x7df7],0x01
jz _check2
mov ah,0x0e
mov al,'0'
int 0x10
jmp _err
_check2:cmp byte[0x7df8],0x0f
jz _check3
mov ah,0x0e
mov al,'1'
int 0x10
jmp _err
_check3:mov ah,0x0e
mov al,'.'
int 0x10
cmp byte[0x7df9],0xff
jz goprotected
mov ah,0x0e
mov al,'2'
int 0x10
jmp _err
load:mov ax,3
int 0x10
jmp 0x8003
goprotected:
mov ah,0
mov al,0x14
int 0x10
mov ax,3
int 0x10
cli
lgdt [gdtr]
mov eax,cr0
or eax,1
mov cr0,eax
mov ebx,0xb8000
mov al,'.'
mov [fs:ebx],al
jmp (code - null):finish
gdt:
null:dd 0
dd 0
code:dw 0xffff
dw 0
db 0
db 10011010b
db 11001111b
db 0
data:dw 0xffff
dw 0
db 0
db 10010010b
db 11001111b
db 0
gdt_end:
gdtr:dw gdt_end - null - 1
dd gdt

desc:dw gdt_end - gdt - 1
dd gdt
[BITS 32]
finish:mov ebx,0xb8000
inc ebx
mov al,'!'
mov [fs:ebx],al
.hng:hlt
jmp .hng
times 1024 - ($ - $$) db 0

